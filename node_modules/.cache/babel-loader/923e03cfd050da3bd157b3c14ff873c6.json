{"ast":null,"code":"var _jsxFileName = \"/Users/eirik/Kodz/legemidler/src/pages/Search.tsx\";\nimport debounce from \"awesome-debounce-promise\";\nimport React, { useEffect } from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport useConstant from \"use-constant\";\nimport { StringParam, useQueryParam } from \"use-query-params\";\nimport Concept from \"../components/Concept\";\nimport Error from \"../components/Error\";\nimport Header from \"../components/Header\";\nimport Loading from \"../components/Loading\";\nimport { defaultBranch, referenceSets, hosts } from \"../config\";\nimport { fetchBranches, fetchIntendedSites, fetchConcepts } from \"../store\";\nconsole.log(defaultBranch);\n\nconst useSearch = () => {\n  // Handle the input text state\n  const [query, setQuery] = useQueryParam(\"q\", StringParam);\n  const [host, setHost] = useQueryParam(\"h\", StringParam);\n  const [branch, setBranch] = useQueryParam(\"b\", StringParam);\n  const [referenceSet, setReferenceSet] = useQueryParam(\"rs\", StringParam);\n  const [intendedSite, setIntendedSite] = useQueryParam(\"is\", StringParam); // Debounce the original search async function\n\n  const debouncedSearch = useConstant(() => debounce(fetchConcepts, 500));\n  const searchRequest = useAsync(async () => {\n    if (host && branch && query) {\n      return debouncedSearch(host, branch, query, referenceSet || \"\");\n    }\n\n    return {};\n  }, [query, branch, referenceSet, intendedSite]); // Ensure a new request is made everytime the text changes (even if it's debounced)\n  // Return everything needed for the hook consumer\n\n  return {\n    host,\n    branch,\n    query,\n    referenceSet,\n    intendedSite,\n    searchRequest,\n    setBranch,\n    setHost,\n    setQuery,\n    setReferenceSet,\n    setIntendedSite\n  };\n};\n\nconst Search = ({\n  scope\n}) => {\n  const {\n    query,\n    setQuery,\n    host,\n    branch,\n    setBranch,\n    setHost,\n    intendedSite,\n    setIntendedSite,\n    searchRequest,\n    setReferenceSet\n  } = useSearch();\n  const branchRequest = useAsync(fetchBranches, [host || hosts[0]]);\n  useEffect(() => {\n    if (branchRequest.result && !branch) {\n      const {\n        path\n      } = branchRequest.result.find(b => b.path === defaultBranch) || {};\n\n      if (path) {\n        setBranch(path);\n      }\n    }\n  }, [branch, branchRequest, setBranch]);\n  const intededSiteRequest = useAsync(fetchIntendedSites, [host || hosts[0], branch || defaultBranch]);\n  useEffect(() => {\n    if (intededSiteRequest.result && !intendedSite) {\n      const {\n        conceptId: conseptId\n      } = intededSiteRequest.result.items.find(is => is.conceptId === \"666\") || {};\n\n      if (conseptId) {\n        setIntendedSite(conseptId);\n      }\n    }\n  }, [intendedSite, intededSiteRequest, setIntendedSite]);\n  useEffect(() => {\n    const {\n      id\n    } = referenceSets.find(set => set.title === scope) || {};\n    setReferenceSet(id);\n\n    if (scope === \"disorder\") {} else if (scope === \"audience\") {\n      setReferenceSet(\"1031000202104\");\n    } else if (scope === \"symptom\") {\n      setReferenceSet(\"1051000202108\");\n    } else if (scope === \"treatment\") {\n      setReferenceSet(\"1021000202101\");\n    } else {\n      setReferenceSet(\"\");\n    }\n  }, [setReferenceSet, scope]);\n  useEffect(() => {\n    if (!host) {\n      setHost(hosts[0]);\n    }\n  }, [host, setHost]);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n  };\n\n  const handleHostChange = event => {\n    setHost(event.target.value);\n  };\n\n  const handleBranchChange = event => {\n    setBranch(event.target.value);\n  };\n\n  const handleIntendedSiteChange = event => {\n    setReferenceSet(event.target.value);\n  };\n\n  const handleQueryChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const branches = branchRequest.result || []; //const intendedSites = intededSiteRequest.result || [];\n\n  const {\n    items = []\n  } = searchRequest.result || {};\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Header, {\n    scope: scope,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"row mb-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-9 col-md-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, branchRequest.error && React.createElement(Error, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, branchRequest.error.message), !branchRequest.loading && !branchRequest.error && React.createElement(\"form\", {\n    onSubmit: handleFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, !scope && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"host\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Host\"), React.createElement(\"select\", {\n    id: \"host\",\n    className: \"form-control\",\n    value: host,\n    onChange: handleHostChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, hosts.map(hostname => React.createElement(\"option\", {\n    value: hostname,\n    key: hostname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, hostname))))), React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"branch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Branch\"), React.createElement(\"select\", {\n    id: \"branch\",\n    className: \"form-control\",\n    onChange: handleBranchChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, branches.map(({\n    path\n  }) => React.createElement(\"option\", {\n    value: path,\n    key: path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, path)))))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"query\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Substans\"), React.createElement(\"input\", {\n    id: \"query\",\n    className: \"form-control\",\n    type: \"text\",\n    value: query,\n    autoComplete: \"off\",\n    onChange: handleQueryChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    \"aria-labelledby\": \"results\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, items.map(({\n    concept: {\n      conceptId,\n      fsn: {\n        term: fullySpecifiedName\n      },\n      pt: {\n        term: preferredTerm\n      }\n    }\n  }) => React.createElement(\"li\", {\n    key: conceptId,\n    className: \"list-group-item mb-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(Concept, {\n    host: host || hosts[0],\n    branch: branch || \"\",\n    preferredTerm: preferredTerm,\n    fullySpecifiedName: fullySpecifiedName,\n    conceptId: conceptId,\n    scope: scope,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }))))))), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"Frigivelse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, \"Frigivelse\"), React.createElement(\"input\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"admMetode\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"Adm. metode\"), React.createElement(\"input\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"intendedSite\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, \"Intended site:\"), React.createElement(\"select\", {\n    id: \"intendedSite\",\n    className: \"form-control\",\n    onChange: handleIntendedSiteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, intededSiteRequest.result && intededSiteRequest.result.items.map(({\n    pt\n  }) => React.createElement(\"option\", {\n    value: pt.term,\n    key: pt.term,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, pt.term))))), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, \"Form\"), React.createElement(\"select\", {\n    id: \"form\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, \"Form 1\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, \"Form 2\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, \"Form 3\")))))), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"S\\xF8k etter legemiddel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"col-3 col-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"d-flex h-100 align-items-center justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, searchRequest.loading && React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-3 col-md-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, searchRequest.error && React.createElement(Error, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, searchRequest.error.message)))));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/eirik/Kodz/legemidler/src/pages/Search.tsx"],"names":["debounce","React","useEffect","useAsync","useConstant","StringParam","useQueryParam","Concept","Error","Header","Loading","defaultBranch","referenceSets","hosts","fetchBranches","fetchIntendedSites","fetchConcepts","console","log","useSearch","query","setQuery","host","setHost","branch","setBranch","referenceSet","setReferenceSet","intendedSite","setIntendedSite","debouncedSearch","searchRequest","Search","scope","branchRequest","result","path","find","b","intededSiteRequest","conceptId","conseptId","items","is","id","set","title","handleFormSubmit","event","preventDefault","handleHostChange","target","value","handleBranchChange","handleIntendedSiteChange","handleQueryChange","branches","error","message","loading","map","hostname","concept","fsn","term","fullySpecifiedName","pt","preferredTerm"],"mappings":"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","sourcesContent":["import debounce from \"awesome-debounce-promise\";\nimport React, { ChangeEvent, FormEvent, useEffect } from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport useConstant from \"use-constant\";\nimport { StringParam, useQueryParam } from \"use-query-params\";\nimport Concept from \"../components/Concept\";\nimport Error from \"../components/Error\";\nimport Header from \"../components/Header\";\nimport Loading from \"../components/Loading\";\nimport { defaultBranch, referenceSets, hosts } from \"../config\";\nimport {\n  fetchBranches,\n  fetchIntendedSites,\n  fetchConcepts,\n  IConceptResult,\n} from \"../store\";\nconsole.log(defaultBranch);\ntype SearchProps = {\n  scope: string;\n};\n\nconst useSearch = () => {\n  // Handle the input text state\n  const [query, setQuery] = useQueryParam(\"q\", StringParam);\n  const [host, setHost] = useQueryParam(\"h\", StringParam);\n  const [branch, setBranch] = useQueryParam(\"b\", StringParam);\n  const [referenceSet, setReferenceSet] = useQueryParam(\"rs\", StringParam);\n  const [intendedSite, setIntendedSite] = useQueryParam(\"is\", StringParam);\n\n  // Debounce the original search async function\n  const debouncedSearch = useConstant(() => debounce(fetchConcepts, 500));\n\n  const searchRequest = useAsync(async () => {\n    if (host && branch && query) {\n      return debouncedSearch(host, branch, query, referenceSet || \"\");\n    }\n    return ({} as any) as Readonly<IConceptResult>;\n  }, [query, branch, referenceSet, intendedSite]); // Ensure a new request is made everytime the text changes (even if it's debounced)\n\n  // Return everything needed for the hook consumer\n  return {\n    host,\n    branch,\n    query,\n    referenceSet,\n    intendedSite,\n    searchRequest,\n    setBranch,\n    setHost,\n    setQuery,\n    setReferenceSet,\n    setIntendedSite,\n  };\n};\n\nconst Search = ({ scope }: SearchProps) => {\n  const {\n    query,\n    setQuery,\n    host,\n    branch,\n    setBranch,\n    setHost,\n    intendedSite,\n    setIntendedSite,\n    searchRequest,\n    setReferenceSet,\n  } = useSearch();\n  const branchRequest = useAsync(fetchBranches, [host || hosts[0]]);\n\n  useEffect(() => {\n    if (branchRequest.result && !branch) {\n      const { path } =\n        branchRequest.result.find((b) => b.path === defaultBranch) || {};\n      if (path) {\n        setBranch(path);\n      }\n    }\n  }, [branch, branchRequest, setBranch]);\n\n  const intededSiteRequest = useAsync(fetchIntendedSites, [\n    host || hosts[0],\n    branch || defaultBranch,\n  ]);\n\n  useEffect(() => {\n    if (intededSiteRequest.result && !intendedSite) {\n      const { conceptId: conseptId } =\n        intededSiteRequest.result.items.find((is) => is.conceptId === \"666\") ||\n        {};\n      if (conseptId) {\n        setIntendedSite(conseptId);\n      }\n    }\n  }, [intendedSite, intededSiteRequest, setIntendedSite]);\n\n  useEffect(() => {\n    const { id } = referenceSets.find((set) => set.title === scope) || {};\n    setReferenceSet(id);\n    if (scope === \"disorder\") {\n    } else if (scope === \"audience\") {\n      setReferenceSet(\"1031000202104\");\n    } else if (scope === \"symptom\") {\n      setReferenceSet(\"1051000202108\");\n    } else if (scope === \"treatment\") {\n      setReferenceSet(\"1021000202101\");\n    } else {\n      setReferenceSet(\"\");\n    }\n  }, [setReferenceSet, scope]);\n\n  useEffect(() => {\n    if (!host) {\n      setHost(hosts[0]);\n    }\n  }, [host, setHost]);\n\n  const handleFormSubmit = (event: FormEvent) => {\n    event.preventDefault();\n  };\n\n  const handleHostChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setHost(event.target.value);\n  };\n  const handleBranchChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setBranch(event.target.value);\n  };\n\n  const handleIntendedSiteChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setReferenceSet(event.target.value);\n  };\n\n  const handleQueryChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const branches = branchRequest.result || [];\n  //const intendedSites = intededSiteRequest.result || [];\n  const { items = [] } = searchRequest.result || {};\n\n  return (\n    <div className=\"container\">\n      <Header scope={scope} />\n      <div className=\"row mb-5\">\n        <div className=\"col-9 col-md-10\">\n          {branchRequest.error && <Error>{branchRequest.error.message}</Error>}\n          {!branchRequest.loading && !branchRequest.error && (\n            <form onSubmit={handleFormSubmit}>\n              <div className=\"form-row\">\n                {!scope && (\n                  <>\n                    <div className=\"col-12\">\n                      <div className=\"form-group\">\n                        <label htmlFor=\"host\">Host</label>\n                        <select\n                          id=\"host\"\n                          className=\"form-control\"\n                          value={host}\n                          onChange={handleHostChange}\n                        >\n                          {hosts.map((hostname) => (\n                            <option value={hostname} key={hostname}>\n                              {hostname}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-12\">\n                      <div className=\"form-group\">\n                        <label htmlFor=\"branch\">Branch</label>\n                        <select\n                          id=\"branch\"\n                          className=\"form-control\"\n                          onChange={handleBranchChange}\n                        >\n                          {branches.map(({ path }) => (\n                            <option value={path} key={path}>\n                              {path}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                  </>\n                )}\n                <div className=\"row\">\n                  <div className=\"col-md-8\">\n                    <div className=\"form-group\">\n                      <label htmlFor=\"query\">Substans</label>\n                      <input\n                        id=\"query\"\n                        className=\"form-control\"\n                        type=\"text\"\n                        value={query}\n                        autoComplete=\"off\"\n                        onChange={handleQueryChange}\n                      />\n                      <section aria-labelledby=\"results\">\n                        <ul className=\"list-group\">\n                          {items.map(\n                            ({\n                              concept: {\n                                conceptId,\n                                fsn: { term: fullySpecifiedName },\n                                pt: { term: preferredTerm },\n                              },\n                            }) => (\n                              <li\n                                key={conceptId}\n                                className=\"list-group-item mb-2\"\n                              >\n                                <Concept\n                                  host={host || hosts[0]}\n                                  branch={branch || \"\"}\n                                  preferredTerm={preferredTerm}\n                                  fullySpecifiedName={fullySpecifiedName}\n                                  conceptId={conceptId}\n                                  scope={scope}\n                                />\n                              </li>\n                            ),\n                          )}\n                        </ul>\n                      </section>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <div className=\"form-group\">\n                      <label htmlFor=\"Frigivelse\">Frigivelse</label>\n                      <input />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <div className=\"form-group\">\n                      <label htmlFor=\"admMetode\">Adm. metode</label>\n                      <input />\n                    </div>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <div className=\"form-group\">\n                      <label htmlFor=\"intendedSite\">Intended site:</label>\n                      <select\n                        id=\"intendedSite\"\n                        className=\"form-control\"\n                        onChange={handleIntendedSiteChange}\n                      >\n                        {intededSiteRequest.result &&\n                          intededSiteRequest.result.items.map(({ pt }) => (\n                            <option value={pt.term} key={pt.term}>\n                              {pt.term}\n                            </option>\n                          ))}\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <div className=\"form-group\">\n                      <label htmlFor=\"form\">Form</label>\n                      <select id=\"form\" className=\"form-control\">\n                        <option>Form 1</option>\n                        <option>Form 2</option>\n                        <option>Form 3</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <input type=\"submit\" value=\"Søk etter legemiddel\" />\n            </form>\n          )}\n        </div>\n\n        <div className=\"col-3 col-md-2\">\n          <div className=\"d-flex h-100 align-items-center justify-content-center\">\n            {searchRequest.loading && <Loading />}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-3 col-md-8\">\n            {searchRequest.error && (\n              <Error>{searchRequest.error.message}</Error>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}